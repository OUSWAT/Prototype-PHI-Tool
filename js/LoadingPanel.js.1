<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      /addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js – OpenLayers
    </title>
        <link rel="search" href="/openlayers/search" />
        <link rel="help" href="/openlayers/wiki/TracGuide" />
        <link rel="alternate" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js?format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/openlayers/export/12468/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js" type="application/javascript; charset=iso-8859-15" title="Original Format" />
        <link rel="up" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control" title="Parent directory" />
        <link rel="start" href="/openlayers/wiki" />
        <link rel="stylesheet" href="/openlayers/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/openlayers/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/openlayers/chrome/common/css/browser.css" type="text/css" />
        <link rel="shortcut icon" href="http://www.openlayers.org/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="http://www.openlayers.org/favicon.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/openlayers/search/opensearch" title="Search OpenLayers" />
    <script type="text/javascript" src="/openlayers/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/openlayers/chrome/common/js/trac.js"></script><script type="text/javascript" src="/openlayers/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/openlayers/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $(".trac-toggledeleted").show().click(function() {
                  $(this).siblings().find(".trac-deleted").toggle();
                  return false;
        }).click();
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        });
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://trac.openlayers.org/"><img src="http://www.openlayers.org/images/OpenLayers.trac.png" alt="OpenLayers" height="92" width="98" /></a>
      </div>
      <form id="search" action="/openlayers/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/openlayers/login">Login</a></li><li><a href="/openlayers/wiki/TracGuide">Help/Guide</a></li><li><a href="/openlayers/about">About Trac</a></li><li class="last"><a href="/openlayers/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/openlayers/wiki">Wiki</a></li><li><a href="/openlayers/timeline">Timeline</a></li><li><a href="/openlayers/roadmap">Roadmap</a></li><li class="active"><a href="/openlayers/browser">Browse Source</a></li><li><a href="/openlayers/query">View Tickets</a></li><li class="last"><a href="/openlayers/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><a href="/openlayers/changeset/10101/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js">Last Change</a></li><li><a href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js?annotate=blame&amp;rev=10101" title="Annotate each line with the last changed revision (this can be time consuming...)">Annotate</a></li><li class="last"><a href="/openlayers/log/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
      <h1>
    <a class="pathentry first" title="Go to root directory" href="/openlayers/browser">root</a><span class="pathentry sep">/</span><a class="pathentry" title="View addins" href="/openlayers/browser/addins">addins</a><span class="pathentry sep">/</span><a class="pathentry" title="View loadingPanel" href="/openlayers/browser/addins/loadingPanel">loadingPanel</a><span class="pathentry sep">/</span><a class="pathentry" title="View trunk" href="/openlayers/browser/addins/loadingPanel/trunk">trunk</a><span class="pathentry sep">/</span><a class="pathentry" title="View lib" href="/openlayers/browser/addins/loadingPanel/trunk/lib">lib</a><span class="pathentry sep">/</span><a class="pathentry" title="View OpenLayers" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers">OpenLayers</a><span class="pathentry sep">/</span><a class="pathentry" title="View Control" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control">Control</a><span class="pathentry sep">/</span><a class="pathentry" title="View LoadingPanel.js" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js">LoadingPanel.js</a>
    <br style="clear: both" />
  </h1>
      <div id="jumprev">
        <form action="" method="get">
          <div>
            <label for="rev">
              View revision:</label>
            <input type="text" id="rev" name="rev" size="6" />
          </div>
        </form>
      </div>
      <div id="jumploc">
        <form action="" method="get">
          <div class="buttons">
            <label for="preselected">Visit:</label>
            <select id="preselected" name="preselected">
              <option selected="selected"></option>
              <optgroup label="branches">
                <option value="/openlayers/browser/trunk">trunk</option><option value="/openlayers/browser/branches/openlayers">branches/openlayers</option>
              </optgroup><optgroup label="tags">
                <option value="/openlayers/browser/tags/openlayers?rev=12355">tags/openlayers</option>
              </optgroup>
            </select>
            <input type="submit" value="Go!" title="Jump to the chosen preselected path" />
          </div>
        </form>
      </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">
            Revision <a href="/openlayers/changeset/10101">10101</a>, <span title="5720 bytes">5.6 KB</span>
            (checked in by bartvde, <a class="timeline" href="/openlayers/timeline?from=2010-03-17T02%3A16%3A52-0700&amp;precision=second" title="2010-03-17T02:16:52-0700 in Timeline">4 years</a> ago)
          </th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
Let position of loading panel be determined by css instead of by javascript code, p=fvanderbiest (closes <a class="closed ticket" href="/openlayers/ticket/2505" title="bug: OpenLayers.Control.LoadingPanel 's maximizeControl method does not let us ... (closed: fixed)">#2505</a>)<br />
</p>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
    <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td>/* Copyright (c) 2006-2008 MetaCarta, Inc., published under the Clear BSD</td></tr><tr><th id="L2"><a href="#L2">2</a></th><td> * license.  See http://svn.openlayers.org/trunk/openlayers/license.txt for the</td></tr><tr><th id="L3"><a href="#L3">3</a></th><td> * full text of the license. */</td></tr><tr><th id="L4"><a href="#L4">4</a></th><td></td></tr><tr><th id="L5"><a href="#L5">5</a></th><td>/**</td></tr><tr><th id="L6"><a href="#L6">6</a></th><td> * @requires OpenLayers/Control.js</td></tr><tr><th id="L7"><a href="#L7">7</a></th><td> *</td></tr><tr><th id="L8"><a href="#L8">8</a></th><td> * Class: OpenLayers.Control.LoadingPanel</td></tr><tr><th id="L9"><a href="#L9">9</a></th><td> * In some applications, it makes sense to alert the user that something is </td></tr><tr><th id="L10"><a href="#L10">10</a></th><td> * happening while tiles are loading. This control displays a div across the </td></tr><tr><th id="L11"><a href="#L11">11</a></th><td> * map when this is going on.</td></tr><tr><th id="L12"><a href="#L12">12</a></th><td> *</td></tr><tr><th id="L13"><a href="#L13">13</a></th><td> * Inherits from:</td></tr><tr><th id="L14"><a href="#L14">14</a></th><td> *  - &lt;OpenLayers.Control&gt;</td></tr><tr><th id="L15"><a href="#L15">15</a></th><td> */</td></tr><tr><th id="L16"><a href="#L16">16</a></th><td>OpenLayers.Control.LoadingPanel = OpenLayers.Class(OpenLayers.Control, {</td></tr><tr><th id="L17"><a href="#L17">17</a></th><td></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td>    /**</td></tr><tr><th id="L19"><a href="#L19">19</a></th><td>     * Property: counter</td></tr><tr><th id="L20"><a href="#L20">20</a></th><td>     * {Integer} A counter for the number of layers loading</td></tr><tr><th id="L21"><a href="#L21">21</a></th><td>     */ </td></tr><tr><th id="L22"><a href="#L22">22</a></th><td>    counter: 0,</td></tr><tr><th id="L23"><a href="#L23">23</a></th><td></td></tr><tr><th id="L24"><a href="#L24">24</a></th><td>    /**</td></tr><tr><th id="L25"><a href="#L25">25</a></th><td>     * Property: maximized</td></tr><tr><th id="L26"><a href="#L26">26</a></th><td>     * {Boolean} A boolean indicating whether or not the control is maximized</td></tr><tr><th id="L27"><a href="#L27">27</a></th><td>    */</td></tr><tr><th id="L28"><a href="#L28">28</a></th><td>    maximized: false,</td></tr><tr><th id="L29"><a href="#L29">29</a></th><td></td></tr><tr><th id="L30"><a href="#L30">30</a></th><td>    /**</td></tr><tr><th id="L31"><a href="#L31">31</a></th><td>     * Property: visible</td></tr><tr><th id="L32"><a href="#L32">32</a></th><td>     * {Boolean} A boolean indicating whether or not the control is visible</td></tr><tr><th id="L33"><a href="#L33">33</a></th><td>    */</td></tr><tr><th id="L34"><a href="#L34">34</a></th><td>    visible: true,</td></tr><tr><th id="L35"><a href="#L35">35</a></th><td></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td>    /**</td></tr><tr><th id="L37"><a href="#L37">37</a></th><td>     * Constructor: OpenLayers.Control.LoadingPanel</td></tr><tr><th id="L38"><a href="#L38">38</a></th><td>     * Display a panel across the map that says 'loading'. </td></tr><tr><th id="L39"><a href="#L39">39</a></th><td>     *</td></tr><tr><th id="L40"><a href="#L40">40</a></th><td>     * Parameters:</td></tr><tr><th id="L41"><a href="#L41">41</a></th><td>     * options - {Object} additional options.</td></tr><tr><th id="L42"><a href="#L42">42</a></th><td>     */</td></tr><tr><th id="L43"><a href="#L43">43</a></th><td>    initialize: function(options) {</td></tr><tr><th id="L44"><a href="#L44">44</a></th><td>         OpenLayers.Control.prototype.initialize.apply(this, [options]);</td></tr><tr><th id="L45"><a href="#L45">45</a></th><td>    },</td></tr><tr><th id="L46"><a href="#L46">46</a></th><td></td></tr><tr><th id="L47"><a href="#L47">47</a></th><td>    /**</td></tr><tr><th id="L48"><a href="#L48">48</a></th><td>     * Function: setVisible</td></tr><tr><th id="L49"><a href="#L49">49</a></th><td>     * Set the visibility of this control</td></tr><tr><th id="L50"><a href="#L50">50</a></th><td>     *</td></tr><tr><th id="L51"><a href="#L51">51</a></th><td>     * Parameters:</td></tr><tr><th id="L52"><a href="#L52">52</a></th><td>     * visible - {Boolean} should the control be visible or not?</td></tr><tr><th id="L53"><a href="#L53">53</a></th><td>    */</td></tr><tr><th id="L54"><a href="#L54">54</a></th><td>    setVisible: function(visible) {</td></tr><tr><th id="L55"><a href="#L55">55</a></th><td>        this.visible = visible;</td></tr><tr><th id="L56"><a href="#L56">56</a></th><td>        if (visible) {</td></tr><tr><th id="L57"><a href="#L57">57</a></th><td>            OpenLayers.Element.show(this.div);</td></tr><tr><th id="L58"><a href="#L58">58</a></th><td>        } else {</td></tr><tr><th id="L59"><a href="#L59">59</a></th><td>            OpenLayers.Element.hide(this.div);</td></tr><tr><th id="L60"><a href="#L60">60</a></th><td>        }</td></tr><tr><th id="L61"><a href="#L61">61</a></th><td>    },</td></tr><tr><th id="L62"><a href="#L62">62</a></th><td></td></tr><tr><th id="L63"><a href="#L63">63</a></th><td>    /**</td></tr><tr><th id="L64"><a href="#L64">64</a></th><td>     * Function: getVisible</td></tr><tr><th id="L65"><a href="#L65">65</a></th><td>     * Get the visibility of this control</td></tr><tr><th id="L66"><a href="#L66">66</a></th><td>     *</td></tr><tr><th id="L67"><a href="#L67">67</a></th><td>     * Returns:</td></tr><tr><th id="L68"><a href="#L68">68</a></th><td>     * {Boolean} the current visibility of this control</td></tr><tr><th id="L69"><a href="#L69">69</a></th><td>    */</td></tr><tr><th id="L70"><a href="#L70">70</a></th><td>    getVisible: function() {</td></tr><tr><th id="L71"><a href="#L71">71</a></th><td>        return this.visible;</td></tr><tr><th id="L72"><a href="#L72">72</a></th><td>    },</td></tr><tr><th id="L73"><a href="#L73">73</a></th><td></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td>    /**</td></tr><tr><th id="L75"><a href="#L75">75</a></th><td>     * APIMethod: hide</td></tr><tr><th id="L76"><a href="#L76">76</a></th><td>     * Hide the loading panel control</td></tr><tr><th id="L77"><a href="#L77">77</a></th><td>    */</td></tr><tr><th id="L78"><a href="#L78">78</a></th><td>    hide: function() {</td></tr><tr><th id="L79"><a href="#L79">79</a></th><td>        this.setVisible(false);</td></tr><tr><th id="L80"><a href="#L80">80</a></th><td>    },</td></tr><tr><th id="L81"><a href="#L81">81</a></th><td></td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>    /**</td></tr><tr><th id="L83"><a href="#L83">83</a></th><td>     * APIMethod: show</td></tr><tr><th id="L84"><a href="#L84">84</a></th><td>     * Show the loading panel control</td></tr><tr><th id="L85"><a href="#L85">85</a></th><td>    */</td></tr><tr><th id="L86"><a href="#L86">86</a></th><td>    show: function() {</td></tr><tr><th id="L87"><a href="#L87">87</a></th><td>        this.setVisible(true);</td></tr><tr><th id="L88"><a href="#L88">88</a></th><td>    },</td></tr><tr><th id="L89"><a href="#L89">89</a></th><td></td></tr><tr><th id="L90"><a href="#L90">90</a></th><td>    /**</td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>     * APIMethod: toggle</td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>     * Toggle the visibility of the loading panel control</td></tr><tr><th id="L93"><a href="#L93">93</a></th><td>    */</td></tr><tr><th id="L94"><a href="#L94">94</a></th><td>    toggle: function() {</td></tr><tr><th id="L95"><a href="#L95">95</a></th><td>        this.setVisible(!this.getVisible());</td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>    },</td></tr><tr><th id="L97"><a href="#L97">97</a></th><td></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>    /**</td></tr><tr><th id="L99"><a href="#L99">99</a></th><td>     * Method: addLayer</td></tr><tr><th id="L100"><a href="#L100">100</a></th><td>     * Attach event handlers when new layer gets added to the map</td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>     *</td></tr><tr><th id="L102"><a href="#L102">102</a></th><td>     * Parameters:</td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>     * evt - {Event}</td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>    */</td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>    addLayer: function(evt) {</td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>        if (evt.layer) {</td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>            evt.layer.events.register('loadstart', this, this.increaseCounter);</td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>            evt.layer.events.register('loadend', this, this.decreaseCounter);</td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>        }</td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>    },</td></tr><tr><th id="L111"><a href="#L111">111</a></th><td></td></tr><tr><th id="L112"><a href="#L112">112</a></th><td>    /**</td></tr><tr><th id="L113"><a href="#L113">113</a></th><td>     * Method: setMap</td></tr><tr><th id="L114"><a href="#L114">114</a></th><td>     * Set the map property for the control and all handlers.</td></tr><tr><th id="L115"><a href="#L115">115</a></th><td>     *</td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>     * Parameters: </td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>     * map - {&lt;OpenLayers.Map&gt;} The control's map.</td></tr><tr><th id="L118"><a href="#L118">118</a></th><td>     */</td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>    setMap: function(map) {</td></tr><tr><th id="L120"><a href="#L120">120</a></th><td>        OpenLayers.Control.prototype.setMap.apply(this, arguments);</td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>        this.map.events.register('preaddlayer', this, this.addLayer);</td></tr><tr><th id="L122"><a href="#L122">122</a></th><td>        for (var i = 0; i &lt; this.map.layers.length; i++) {</td></tr><tr><th id="L123"><a href="#L123">123</a></th><td>            var layer = this.map.layers[i];</td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>            layer.events.register('loadstart', this, this.increaseCounter);</td></tr><tr><th id="L125"><a href="#L125">125</a></th><td>            layer.events.register('loadend', this, this.decreaseCounter);</td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>        }</td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>    },</td></tr><tr><th id="L128"><a href="#L128">128</a></th><td></td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>    /**</td></tr><tr><th id="L130"><a href="#L130">130</a></th><td>     * Method: increaseCounter</td></tr><tr><th id="L131"><a href="#L131">131</a></th><td>     * Increase the counter and show control</td></tr><tr><th id="L132"><a href="#L132">132</a></th><td>    */</td></tr><tr><th id="L133"><a href="#L133">133</a></th><td>    increaseCounter: function() {</td></tr><tr><th id="L134"><a href="#L134">134</a></th><td>        this.counter++;</td></tr><tr><th id="L135"><a href="#L135">135</a></th><td>        if (this.counter &gt; 0) { </td></tr><tr><th id="L136"><a href="#L136">136</a></th><td>            if (!this.maximized &amp;&amp; this.visible) {</td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>                this.maximizeControl(); </td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>            }</td></tr><tr><th id="L139"><a href="#L139">139</a></th><td>        }</td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>    },</td></tr><tr><th id="L141"><a href="#L141">141</a></th><td>    </td></tr><tr><th id="L142"><a href="#L142">142</a></th><td>    /**</td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>     * Method: decreaseCounter</td></tr><tr><th id="L144"><a href="#L144">144</a></th><td>     * Decrease the counter and hide the control if finished</td></tr><tr><th id="L145"><a href="#L145">145</a></th><td>    */</td></tr><tr><th id="L146"><a href="#L146">146</a></th><td>    decreaseCounter: function() {</td></tr><tr><th id="L147"><a href="#L147">147</a></th><td>        if (this.counter &gt; 0) {</td></tr><tr><th id="L148"><a href="#L148">148</a></th><td>            this.counter--;</td></tr><tr><th id="L149"><a href="#L149">149</a></th><td>        }</td></tr><tr><th id="L150"><a href="#L150">150</a></th><td>        if (this.counter == 0) {</td></tr><tr><th id="L151"><a href="#L151">151</a></th><td>            if (this.maximized &amp;&amp; this.visible) {</td></tr><tr><th id="L152"><a href="#L152">152</a></th><td>                this.minimizeControl();</td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>            }</td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>        }</td></tr><tr><th id="L155"><a href="#L155">155</a></th><td>    },</td></tr><tr><th id="L156"><a href="#L156">156</a></th><td></td></tr><tr><th id="L157"><a href="#L157">157</a></th><td>    /**</td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>     * Method: draw</td></tr><tr><th id="L159"><a href="#L159">159</a></th><td>     * Create and return the element to be splashed over the map.</td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>     */</td></tr><tr><th id="L161"><a href="#L161">161</a></th><td>    draw: function () {</td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>        OpenLayers.Control.prototype.draw.apply(this, arguments);</td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>        return this.div;</td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>    },</td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>     </td></tr><tr><th id="L166"><a href="#L166">166</a></th><td>    /**</td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>     * Method: minimizeControl</td></tr><tr><th id="L168"><a href="#L168">168</a></th><td>     * Set the display properties of the control to make it disappear.</td></tr><tr><th id="L169"><a href="#L169">169</a></th><td>     *</td></tr><tr><th id="L170"><a href="#L170">170</a></th><td>     * Parameters:</td></tr><tr><th id="L171"><a href="#L171">171</a></th><td>     * evt - {Event}</td></tr><tr><th id="L172"><a href="#L172">172</a></th><td>     */</td></tr><tr><th id="L173"><a href="#L173">173</a></th><td>    minimizeControl: function(evt) {</td></tr><tr><th id="L174"><a href="#L174">174</a></th><td>        this.div.style.display = "none"; </td></tr><tr><th id="L175"><a href="#L175">175</a></th><td>        this.maximized = false;</td></tr><tr><th id="L176"><a href="#L176">176</a></th><td>    </td></tr><tr><th id="L177"><a href="#L177">177</a></th><td>        if (evt != null) {</td></tr><tr><th id="L178"><a href="#L178">178</a></th><td>            OpenLayers.Event.stop(evt);</td></tr><tr><th id="L179"><a href="#L179">179</a></th><td>        }</td></tr><tr><th id="L180"><a href="#L180">180</a></th><td>    },</td></tr><tr><th id="L181"><a href="#L181">181</a></th><td>    </td></tr><tr><th id="L182"><a href="#L182">182</a></th><td>    /**</td></tr><tr><th id="L183"><a href="#L183">183</a></th><td>     * Method: maximizeControl</td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>     * Make the control visible.</td></tr><tr><th id="L185"><a href="#L185">185</a></th><td>     *</td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>     * Parameters:</td></tr><tr><th id="L187"><a href="#L187">187</a></th><td>     * evt - {Event}</td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>     */</td></tr><tr><th id="L189"><a href="#L189">189</a></th><td>    maximizeControl: function(evt) {</td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>        this.div.style.display = "block";</td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>        this.maximized = true;</td></tr><tr><th id="L192"><a href="#L192">192</a></th><td>    </td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>        if (evt != null) {</td></tr><tr><th id="L194"><a href="#L194">194</a></th><td>            OpenLayers.Event.stop(evt);</td></tr><tr><th id="L195"><a href="#L195">195</a></th><td>        }</td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>    },</td></tr><tr><th id="L197"><a href="#L197">197</a></th><td></td></tr><tr><th id="L198"><a href="#L198">198</a></th><td>    /** </td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>     * Method: destroy</td></tr><tr><th id="L200"><a href="#L200">200</a></th><td>     * Destroy control.</td></tr><tr><th id="L201"><a href="#L201">201</a></th><td>     */</td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>    destroy: function() {</td></tr><tr><th id="L203"><a href="#L203">203</a></th><td>        if (this.map) {</td></tr><tr><th id="L204"><a href="#L204">204</a></th><td>            this.map.events.unregister('preaddlayer', this, this.addLayer);</td></tr><tr><th id="L205"><a href="#L205">205</a></th><td>            if (this.map.layers) {</td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>                for (var i = 0; i &lt; this.map.layers.length; i++) {</td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>                    var layer = this.map.layers[i];</td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>                    layer.events.unregister('loadstart', this, </td></tr><tr><th id="L209"><a href="#L209">209</a></th><td>                        this.increaseCounter);</td></tr><tr><th id="L210"><a href="#L210">210</a></th><td>                    layer.events.unregister('loadend', this, </td></tr><tr><th id="L211"><a href="#L211">211</a></th><td>                        this.decreaseCounter);</td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>                }</td></tr><tr><th id="L213"><a href="#L213">213</a></th><td>            }</td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>        }</td></tr><tr><th id="L215"><a href="#L215">215</a></th><td>        OpenLayers.Control.prototype.destroy.apply(this, arguments);</td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>    },     </td></tr><tr><th id="L217"><a href="#L217">217</a></th><td></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td>    CLASS_NAME: "OpenLayers.Control.LoadingPanel"</td></tr><tr><th id="L219"><a href="#L219">219</a></th><td></td></tr><tr><th id="L220"><a href="#L220">220</a></th><td>});</td></tr></tbody></table>
      </div>
      <div id="help">
        <strong>Note:</strong> See <a href="/openlayers/wiki/TracBrowser">TracBrowser</a>
        for help on using the browser.
      </div>
      <div id="anydiff">
        <form action="/openlayers/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js" />
            <input type="hidden" name="old_path" value="/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js" />
            <input type="hidden" name="new_rev" />
            <input type="hidden" name="old_rev" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/openlayers/browser/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js?format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/openlayers/export/12468/addins/loadingPanel/trunk/lib/OpenLayers/Control/LoadingPanel.js">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/openlayers/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/openlayers/about"><strong>Trac 0.11.7</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">[<a href="http://openlayers.org/">OpenLayers</a>]</p>
    </div>
  </body>
</html>